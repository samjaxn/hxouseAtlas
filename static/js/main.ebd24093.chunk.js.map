{"version":3,"sources":["components/Boxes.js","content/jacky.glb","components/NodeObject.js","content/andras.png","content/hongShing.png","content/hongShing2.png","content/hongShing3.png","content/hongShing4.png","content/shoeLaundry.png","content/shoeLaundry2.png","content/shoeLaundry3.png","content/jordanBlue1.png","content/jordanBlue2.png","content/jordanBlue3.png","content/trickshotting.gif","content/trickshottingAzon.png","content/trickshottingClarify.png","content/trickshottingCute.png","content/trickshottingDare.png","content/trickshottingRava.png","content/trickshottingVL.png","content/jordanRed1.png","content/jordanOrange1.png","content/ghostatelier1080.png","content/trish.png","content/trish2.png","content/trish3.png","components/Graph.js","components/JackyObject.js","components/TextObject.js","components/ImageObject.js","components/Main.js","App.js","javascript/utils.js","reportWebVitals.js","index.js"],"names":["THREE","Array","fill","NodeObject","value","scene","data","mouse","pos","scaled","onClick","getPosRef","getScaleRef","props","testing","object","useRef","position","scale","useThree","size","viewport","aspect","width","height","useSpring","config","mass","tension","friction","precision","spring","color","useEffect","useFrame","current","Math","abs","x","lerp","y","z","group","ref","dispose","e","GetImageUrl","url","andras","hongShing","hongShing2","hongShing3","hongShing4","shoeLaundry","shoeLaundry2","shoeLaundry3","jordanBlue1","jordanBlue2","jordanBlue3","trickshotting","trickshottingAzon","trickshottingClarify","trickshottingCute","trickshottingDare","trickshottingRava","trickshottingVL","jordanRed1","jordanOrange1","ghost1080","trish","trish2","trish3","GetText","text","JackyObject","useLoader","GLTFLoader","jackyGLB","nodes","materials","animations","useState","hovered","setHover","document","body","style","cursor","name","onPointerOver","onPointerOut","CINEMA_4D_Editor","material","geometry","Extrude_1","Rounding_1","Rounding_2","Extrude","Cap_1","Cap_2","TextObject","children","vAlign","hAlign","scaleable","flatText","font","useMemo","curveSegments","bevelEnabled","bevelThickness","bevelSize","bevelOffset","bevelSegments","mesh","useUpdate","self","computeBoundingBox","boundingBox","getSize","configs","args","meshStandardMaterial","attach","ImageObject","hoverable","load","texture","hoverValue","planeBufferGeometry","map","Main","positions","Map","scaleVals","activeNode","setActiveNode","g","require","createGraph","addNode","pos2","center","link","scaledCenter","addLink","clickedNode","node","getNode","getYearNode","forEachNode","id","get","linkedNodes","customPosNodes","forEachLinkedNode","linkedNode","push","linkedNodesPos","urlLink","window","open","currentYear","direction","angleIncrement","length","angle","forEach","index","calcX","calcY","calcZ","toRadians","sin","cos","PI","posRef","set","scaleVal","fallback","returnObjects","Camera","setDefaultCamera","lookAt","App","posX","updateX","posY","updateY","mousePos","onMouseMove","useCallback","clientX","innerWidth","clientY","innerHeight","getMousePos","resize","polyfill","ResizeObserver","gl","antialias","alpha","onCreated","setClearColor","intensity","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.ebd24093.chunk.js","sourcesContent":["import React, { useRef, useMemo, useState, useEffect } from 'react'\r\nimport * as THREE from 'three';\r\nimport { extend, useThree, useFrame } from 'react-three-fiber';\r\nimport { useSpring, animated } from 'react-spring/three';\r\n\r\nconst tempObject = new THREE.Object3D();\r\nconst tempColor = new THREE.Color();\r\nconst colors = new Array(1000).fill('grey');\r\n\r\nconst Boxes = ({mouse}) => {\r\n    const { size, viewport, aspect } = useThree();\r\n    const aspectX = size.width/ viewport.width;\r\n    const aspectY = size.height/ viewport.height;\r\n\r\n    const [hovered, set] = useState();\r\n    const colorArray = useMemo(() => Float32Array.from(new Array(1000).fill().flatMap((_, i) => tempColor.set(colors[i]).toArray())), [])\r\n\r\n    const ref = useRef();\r\n    const previous = useRef();\r\n    useEffect(() => void (previous.current = hovered), [hovered]);\r\n\r\n    useFrame(state => {\r\n        const time = state.clock.getElapsedTime();\r\n        //ref.current.rotation.x = Math.sin(time / 4);\r\n        //ref.current.rotation.y = Math.sin(time / 2);\r\n        let i = 0;\r\n        for(let x = 0; x < 10; x++)\r\n            for(let y = 0; y < 10; y++){\r\n                    const id = i++\r\n\r\n                    tempObject.position.set(5 - x, 5 - y, 0);\r\n                    tempObject.rotation.y = Math.sin(x / 4 + time) + Math.sin(y / 4 + time) + Math.sin(5 / 4 + time)\r\n                    tempObject.rotation.z = tempObject.rotation.y * 2\r\n                    if (hovered !== previous.current) {\r\n                        tempColor.set(id === hovered ? 'white' : 'grey').toArray(colorArray, id * 3)\r\n                        ref.current.geometry.attributes.color.needsUpdate = true\r\n                    }\r\n                    const scale = id === hovered ? 2 : 1\r\n                    tempObject.scale.set(scale, scale, scale)\r\n                    tempObject.updateMatrix()\r\n                    ref.current.setMatrixAt(id, tempObject.matrix)\r\n                }\r\n\r\n        ref.current.instanceMatrix.needsUpdate = true\r\n    })\r\n\r\n    return (\r\n        <instancedMesh\r\n        ref={ref}\r\n        args={[null, null, 1000]}\r\n        onPointerMove={e => set(e.instanceId)}\r\n        onPointerOut={e => set(undefined)}>\r\n            <boxBufferGeometry\r\n            attach=\"geometry\"\r\n            args={[0.7, 0.7, 0.7]}>\r\n                <instancedBufferAttribute\r\n                attachObject={['attributes', 'color']}\r\n                args={[colorArray, 3]} />\r\n            </boxBufferGeometry>\r\n            <meshPhongMaterial\r\n            attach=\"material\"\r\n            vertexColors={THREE.VertexColors} />\r\n        </instancedMesh>\r\n    )\r\n}\r\n\r\nexport default Boxes","export default __webpack_public_path__ + \"static/media/jacky.db25af7a.glb\";","import React, { useEffect, useRef, useState } from 'react'\r\nimport * as THREE from 'three'\r\nimport { useSpring, animated } from 'react-spring/three' \r\nimport { useLoader, useFrame, useThree } from 'react-three-fiber'\r\nimport { GLTFLoader } from 'three/examples/jsm/loaders/GLTFLoader'\r\nimport lerp from 'lerp'\r\n\r\nconst NodeObject = ({value, data, mouse, scene, pos=[0,0,0], scaled=[1,1,1], onClick, getPosRef, getScaleRef, testing=false, ...props}) => {\r\n    const object = useRef()\r\n    const position = useRef(pos)\r\n    const scale = useRef(scaled)\r\n\r\n    const { size, viewport, aspect } = useThree()\r\n    const aspectX = size.width/ viewport.width\r\n    const aspectY = size.height/ viewport.height\r\n\r\n    const { color, ...spring } = useSpring({\r\n        //scale: hovered ? [1.2, 1.2, 1.2] : [1, 1, 1],\r\n        //color: hovered ? 'white' : 'black',\r\n        config: { mass: 10, tension: 1000, friction: 300, precision: 0.00001 }\r\n    })\r\n\r\n    useEffect(() => {\r\n        getPosRef(value, position)\r\n        getScaleRef(value, scale)\r\n    }, [])\r\n\r\n    useFrame(() => {\r\n        if(object.current){\r\n            (Math.abs(object.current.position.x - position.current[0]) > 0.01) ? object.current.position.x = lerp(object.current.position.x, position.current[0], 0.1) : object.current.position.x = position.current[0];\r\n            (Math.abs(object.current.position.y - position.current[1]) > 0.01) ? object.current.position.y = lerp(object.current.position.y, position.current[1], 0.1) : object.current.position.y = position.current[1];\r\n            (Math.abs(object.current.position.z - position.current[2]) > 0.01) ? object.current.position.z = lerp(object.current.position.z, position.current[2], 0.1) : object.current.position.z = position.current[2];\r\n\r\n            (Math.abs(object.current.scale.x - scale.current[0]) > 0.01) ? object.current.scale.x = lerp(object.current.scale.x, scale.current[0], 0.1) : object.current.scale.x = scale.current[0];\r\n            (Math.abs(object.current.scale.y - scale.current[1]) > 0.01) ? object.current.scale.y = lerp(object.current.scale.y, scale.current[1], 0.1) : object.current.scale.y = scale.current[1];\r\n            (Math.abs(object.current.scale.z - scale.current[2]) > 0.01) ? object.current.scale.z = lerp(object.current.scale.z, scale.current[2], 0.1) : object.current.scale.z = scale.current[2];\r\n\r\n            if(testing){\r\n                //console.log(object.current.position.y)\r\n            }\r\n            \r\n        }\r\n    })\r\n\r\n    return (\r\n        <animated.group\r\n        ref={object}\r\n        dispose={null}\r\n        {...spring}\r\n        {...props}\r\n        onClick={e => {\r\n            onClick(value)\r\n        }}>\r\n            {scene}\r\n        </animated.group>\r\n    )\r\n}\r\n\r\nexport default NodeObject\r\n","export default __webpack_public_path__ + \"static/media/andras.176390a1.png\";","export default __webpack_public_path__ + \"static/media/hongShing.73251cee.png\";","export default __webpack_public_path__ + \"static/media/hongShing2.0d00e1fe.png\";","export default __webpack_public_path__ + \"static/media/hongShing3.6fe1ed35.png\";","export default __webpack_public_path__ + \"static/media/hongShing4.93311c0c.png\";","export default __webpack_public_path__ + \"static/media/shoeLaundry.e81bdafa.png\";","export default __webpack_public_path__ + \"static/media/shoeLaundry2.9f6b96ce.png\";","export default __webpack_public_path__ + \"static/media/shoeLaundry3.93fb160a.png\";","export default __webpack_public_path__ + \"static/media/jordanBlue1.8a8a32c3.png\";","export default __webpack_public_path__ + \"static/media/jordanBlue2.35011d41.png\";","export default __webpack_public_path__ + \"static/media/jordanBlue3.f05edc09.png\";","export default __webpack_public_path__ + \"static/media/trickshotting.c075e066.gif\";","export default __webpack_public_path__ + \"static/media/trickshottingAzon.3346ddeb.png\";","export default __webpack_public_path__ + \"static/media/trickshottingClarify.70abf344.png\";","export default __webpack_public_path__ + \"static/media/trickshottingCute.eab75403.png\";","export default __webpack_public_path__ + \"static/media/trickshottingDare.b0d5699d.png\";","export default __webpack_public_path__ + \"static/media/trickshottingRava.c9c81029.png\";","export default __webpack_public_path__ + \"static/media/trickshottingVL.6662e7a7.png\";","export default __webpack_public_path__ + \"static/media/jordanRed1.2975b7e9.png\";","export default __webpack_public_path__ + \"static/media/jordanOrange1.19ef01dd.png\";","export default __webpack_public_path__ + \"static/media/ghostatelier1080.c70ca249.png\";","export default __webpack_public_path__ + \"static/media/trish.c3a5c6fe.png\";","export default __webpack_public_path__ + \"static/media/trish2.9bdeaf32.png\";","export default __webpack_public_path__ + \"static/media/trish3.0ce36792.png\";","import React from 'react'\r\n\r\nimport andras from '../content/andras.png'\r\n\r\nimport hongShing from '../content/hongShing.png'\r\nimport hongShing2 from '../content/hongShing2.png'\r\nimport hongShing3 from '../content/hongShing3.png'\r\nimport hongShing4 from '../content/hongShing4.png'\r\n\r\nimport shoeLaundry from '../content/shoeLaundry.png'\r\nimport shoeLaundry2 from '../content/shoeLaundry2.png'\r\nimport shoeLaundry3 from '../content/shoeLaundry3.png'\r\n\r\nimport jordanBlue1 from '../content/jordanBlue1.png'\r\nimport jordanBlue2 from '../content/jordanBlue2.png'\r\nimport jordanBlue3 from '../content/jordanBlue3.png'\r\n\r\nimport trickshotting from '../content/trickshotting.gif'\r\nimport trickshottingAzon from '../content/trickshottingAzon.png'\r\nimport trickshottingClarify from '../content/trickshottingClarify.png'\r\nimport trickshottingCute from '../content/trickshottingCute.png'\r\nimport trickshottingDare from '../content/trickshottingDare.png'\r\nimport trickshottingRava from '../content/trickshottingRava.png'\r\nimport trickshottingVL from '../content/trickshottingVL.png'\r\n\r\n\r\nimport jordanRed1 from '../content/jordanRed1.png'\r\n\r\nimport jordanOrange1 from '../content/jordanOrange1.png'\r\n\r\nimport ghost1080 from '../content/ghostatelier1080.png'\r\n\r\nimport trish from '../content/trish.png'\r\nimport trish2 from '../content/trish2.png'\r\nimport trish3 from '../content/trish3.png'\r\n\r\nconst Graph = ({url}) => {\r\n    return null\r\n}\r\n\r\nconst GetImageUrl = (url) => {\r\n    switch(url){\r\n        case 'andras':\r\n            return andras\r\n        case 'hongShing':\r\n            return hongShing\r\n        case 'hongShing2':\r\n            return hongShing2\r\n        case 'hongShing3':\r\n            return hongShing3\r\n        case 'hongShing4':\r\n            return hongShing4\r\n        case 'shoeLaundry':\r\n            return shoeLaundry\r\n        case 'shoeLaundry2':\r\n            return shoeLaundry2\r\n        case 'shoeLaundry3':\r\n            return shoeLaundry3\r\n        case 'jordanBlue1':\r\n            return jordanBlue1\r\n        case 'jordanBlue2':\r\n            return jordanBlue2\r\n        case 'jordanBlue3':\r\n            return jordanBlue3\r\n        case 'trickshotting':\r\n            return trickshotting\r\n        case 'trickshottingAzon':\r\n            return trickshottingAzon\r\n        case 'trickshottingClarify':\r\n            return trickshottingClarify\r\n        case 'trickshottingCute':\r\n            return trickshottingCute\r\n        case 'trickshottingDare':\r\n            return trickshottingDare\r\n        case 'trickshottingRava':\r\n            return trickshottingRava\r\n        case 'trickshottingVL':\r\n            return trickshottingVL\r\n        case 'jordanRed1':\r\n            return jordanRed1\r\n        case 'jordanOrange1':\r\n            return jordanOrange1\r\n        case 'ghost':\r\n            return ghost1080\r\n        case 'trish':\r\n            return trish\r\n        case 'trish2':\r\n            return trish2\r\n        case 'trish3':\r\n            return trish3\r\n        // case '':\r\n        //     return\r\n        default:\r\n            return shoeLaundry\r\n    }\r\n}\r\n\r\nconst GetText = (text) => {\r\n    switch(text){\r\n        case 'jordanBlue':\r\n            return \"testing the text that will b \\n blah blah\"\r\n        default:\r\n            return ''\r\n    }\r\n}\r\n\r\nexport {Graph, GetImageUrl, GetText}","import React, { useState, useEffect } from 'react'\r\nimport { useLoader } from 'react-three-fiber'\r\nimport { GLTFLoader } from 'three/examples/jsm/loaders/GLTFLoader'\r\nimport { useSpring, animated } from 'react-spring/three'\r\nimport jackyGLB from '../content/jacky.glb'\r\n\r\nconst JackyObject = () => {\r\n    const { nodes, materials, animations } = useLoader(GLTFLoader, jackyGLB)\r\n\r\n    const [hovered, setHover] = useState(false)\r\n\r\n    const { color, scale, pos, ...configs} = useSpring({\r\n      color: hovered ? 'white' : 'silver',\r\n      scale: hovered ? [1.1, 1.1, 1.1] : [1, 1, 1]\r\n    })\r\n\r\n    useEffect(() => {\r\n      document.body.style.cursor = hovered ? 'pointer' : 'auto'\r\n    }, [hovered])\r\n\r\n    return (\r\n      <animated.scene name=\"Root Scene\" scale={scale}>\r\n        <group name=\"RootNode\"\r\n        onPointerOver={e => setHover(true)}\r\n        onPointerOut={e => setHover(false)}\r\n        >\r\n          <primitive object={nodes.CINEMA_4D_Editor} />\r\n          <group name=\"JACKY\">\r\n            <mesh\r\n              material={materials['Plastic Shiny warped Procedural']}\r\n              geometry={nodes.Extrude_1.geometry}\r\n              name=\"Extrude_1\"\r\n              position={[0, -0.51, -0.05]}>\r\n              <mesh\r\n                material={materials['Plastic Shiny warped Procedural']}\r\n                geometry={nodes.Rounding_1.geometry}\r\n                name=\"Rounding_1\"\r\n              />\r\n              <mesh\r\n                material={materials['Plastic Shiny warped Procedural']}\r\n                geometry={nodes.Rounding_2.geometry}\r\n                name=\"Rounding_2\"\r\n              />\r\n            </mesh>\r\n            <mesh\r\n              material={materials['Plastic Dark  Procedural']}\r\n              geometry={nodes.Extrude.geometry}\r\n              name=\"Extrude\"\r\n              position={[0, -0.51, 0.05]}>\r\n              <mesh material={materials['Plastic Dark  Procedural']} geometry={nodes.Cap_1.geometry} name=\"Cap_1\" />\r\n              <mesh material={materials['Plastic Dark  Procedural']} geometry={nodes.Cap_2.geometry} name=\"Cap_2\" />\r\n            </mesh>\r\n          </group>\r\n        </group>\r\n      </animated.scene>\r\n    )\r\n}\r\n\r\nexport default JackyObject\r\n","import React, { useMemo, useState, useEffect } from 'react'\r\nimport * as THREE from 'three'\r\nimport { useSpring, animated } from 'react-spring/three' \r\nimport { useLoader, useUpdate } from 'react-three-fiber'\r\nimport { GLTFLoader } from 'three/examples/jsm/loaders/GLTFLoader'\r\n\r\nconst TextObject = ({children, vAlign = 'center', hAlign = 'center', size = 1, scaleable = true, flatText = false, ...props }) => {\r\n    const font = useLoader(THREE.FontLoader, 'Oswald_Regular.json')\r\n    const config = useMemo(\r\n      () => ({ font, size: flatText ? 5 : 7, height: flatText ? 0 : 3, curveSegments: 32, bevelEnabled: flatText ? false : true, bevelThickness: 1, bevelSize: 0.5, bevelOffset: 0, bevelSegments: 5 }),\r\n      [font]\r\n    )\r\n\r\n    const mesh = useUpdate(\r\n      (self) => {\r\n        const size = new THREE.Vector3()\r\n        self.geometry.computeBoundingBox()\r\n        self.geometry.boundingBox.getSize(size)\r\n        self.position.x = hAlign === 'center' ? -size.x / 2 : hAlign === 'right' ? 0 : -size.x\r\n        self.position.y = vAlign === 'center' ? -size.y / 2 : vAlign === 'top' ? 0 : -size.y\r\n      },\r\n      [children]\r\n    )\r\n\r\n    const [hovered, setHover] = useState(false)\r\n\r\n    const { color, scale, pos, ...configs} = useSpring({\r\n      color: (hovered || flatText) ? 'white' : 'silver',\r\n      scale: (hovered && scaleable) ? [1.1, 1.1, 1.1] : [1, 1, 1]\r\n    })\r\n\r\n    useEffect(() => {\r\n      document.body.style.cursor = (hovered && !flatText) ? 'pointer' : 'auto'\r\n    }, [hovered])\r\n\r\n    return (\r\n      <animated.scene name=\"Root Scene\" scale={scale}>\r\n        <group {...props} scale={[0.1 * size, 0.1 * size, 0.1]}\r\n        onPointerOver={e => setHover(true)}\r\n        onPointerOut={e => setHover(false)}\r\n        {...configs}>\r\n          <mesh ref={mesh}>\r\n            <textBufferGeometry args={[children, config]} />\r\n            <animated.meshStandardMaterial\r\n              attach=\"material\"\r\n              color={color}\r\n            />\r\n          </mesh>\r\n        </group>\r\n      </animated.scene>\r\n    )\r\n}\r\n\r\nexport default TextObject\r\n","import React, { useMemo, useState, useEffect } from 'react'\r\nimport * as THREE from 'three'\r\nimport { TextureLoader } from 'three/src/loaders/TextureLoader'\r\nimport { useSpring, animated, config } from 'react-spring/three' \r\nimport { useLoader, useUpdate } from 'react-three-fiber'\r\nimport { HoverImageShader } from '../resources/index'\r\n\r\nconst ImageObject = ({ url, size=[5.3, 3], scaled, hoverable = true, ...props }) => {\r\n    const [hovered, setHover] = useState(false)\r\n\r\n    const [texture] = useMemo(() => {\r\n        const loader = new THREE.TextureLoader()\r\n        return [loader.load(url)]\r\n    }, [url])\r\n\r\n    const { hoverValue, scale } = useSpring({\r\n        hoverValue: hovered ? 1 : 0,\r\n        scale: hovered ? [1.2, 1.2, 1.2] : [1, 1, 1],\r\n        // config: config.molasses\r\n    })\r\n\r\n    useEffect(() => {\r\n        document.body.style.cursor = (hovered && hoverable) ? 'pointer' : 'auto'\r\n    }, [hovered])\r\n\r\n    return (\r\n        <animated.scene scale={scale}>\r\n            <animated.mesh\r\n            onPointerOver={e => setHover(true)}\r\n            onPointerOut={e => setHover(false)}\r\n            {...props}\r\n            >\r\n                <animated.planeBufferGeometry attach=\"geometry\" args={size} />\r\n                {/* <animated.shaderMaterial attach=\"material\" transparent args={[HoverImageShader]} uniforms-texture-value={texture} uniforms-hover-value={hoverValue} /> */}\r\n                <meshStandardMaterial map={texture} attach=\"material\" />\r\n            </animated.mesh>\r\n        </animated.scene>\r\n    )\r\n}\r\n\r\nexport default ImageObject\r\n","import React, { Suspense, useRef, useState } from 'react'\r\nimport { Graph, GetImageUrl, GetText } from './Graph'\r\nimport NodeObject from './NodeObject'\r\nimport JackyObject from './JackyObject'\r\nimport TextObject from './TextObject'\r\nimport ShapeObject from './ShapeObject'\r\nimport ImageObject from './ImageObject'\r\n\r\nconst Main = ({mouse}) => {\r\n    let x = mouse.current[0]\r\n\r\n    let positions = useRef(new Map())\r\n    let scaleVals = useRef(new Map())\r\n\r\n    //need this for react to re render the components after a click is made\r\n    let [activeNode, setActiveNode] = useState()\r\n\r\n    var createGraph = require('ngraph.graph');\r\n    var g = createGraph();\r\n\r\n    g.addNode('jacky', { scene: <JackyObject />, pos: [0,0,30]})\r\n\r\n    g.addNode('2011 - 2012', { scene: <TextObject children={\"2011-2012\"} />, pos: [0,0,30]})\r\n    g.addNode('2013 - 2018', { scene: <TextObject children={\"2013-2018\"} />, pos: [0,0,30]})\r\n    g.addNode('2019', { scene: <TextObject children=\"2019\" />, pos: [0,0,30]})\r\n    g.addNode('2020', { scene: <TextObject children=\"2020\" />, pos: [0,0,30]})\r\n    g.addNode('2021', { scene: <TextObject children=\"2021\" />, pos: [0,0,30]})\r\n    g.addNode('2022', { scene: <TextObject children=\"2022\" />, pos: [0,0,30]})\r\n    g.addNode('2023', { scene: <TextObject children=\"2023\" />, pos: [0,0,30]})\r\n    g.addNode('2024', { scene: <TextObject children=\"2024\" />, pos: [0,0,30]})\r\n    g.addNode('2025', { scene: <TextObject children=\"2025\" />, pos: [0,0,30]})\r\n    g.addNode('2026', { scene: <TextObject children=\"2026\" />, pos: [0,0,30]})\r\n    g.addNode('2027', { scene: <TextObject children=\"2027\" />, pos: [0,0,30]})\r\n    g.addNode('2028', { scene: <TextObject children=\"2028\" />, pos: [0,0,30]})\r\n    g.addNode('2029', { scene: <TextObject children=\"2029\" />, pos: [0,0,30]})\r\n    g.addNode('2030', { scene: <TextObject children=\"2030\" />, pos: [0,0,30]})\r\n\r\n    g.addNode('rightArrow', { scene: <TextObject children={\">\"} />, pos: [0,0,30], pos2: [2.5, 0, 0], center: false})\r\n    g.addNode('leftArrow', { scene: <TextObject children={\"<\"} />, pos: [0,0,30], pos2: [-2.5, 0, 0], center: false})\r\n\r\n    g.addNode('c4d', { scene: <TextObject children=\"3D MOTION DESIGNER\" />, pos: [0,0,30], link: \"https://www.instagram.com/jackyjacksn/\"})\r\n    g.addNode('dev', { scene: <TextObject children=\"SOFTWARE DEVELOPER\" />, pos: [0,0,30], link: \"http://www.jacky.design/\"})\r\n\r\n    //g.addNode('v1', { scene: <ShapeObject />, pos: [0,0,30], link: \"https://www.instagram.com/jackyjacksn/\"})\r\n\r\n    // g.addNode('trickshotting', { scene: <ImageObject url={GetImageUrl('trickshotting')} />, pos: [0,0,30], scaledCenter: true, link: \"https://www.instagram.com/p/CJWq10igOXw/\"})\r\n    g.addNode('trickshotting', { scene: <ImageObject url={GetImageUrl('trickshottingAzon')} />, pos: [0,0,30], link: \"https://www.instagram.com/p/CJWq10igOXw/\"})\r\n    g.addNode('trickshotting2', { scene: <ImageObject url={GetImageUrl('trickshottingAzon')} />, pos: [0,0,30],  pos2: [10, 2, -1], center: false})\r\n    g.addNode('trickshotting3', { scene: <ImageObject url={GetImageUrl('trickshottingClarify')} />, pos: [0,0,30],  pos2: [10, -2, -1], center: false})\r\n\r\n    g.addNode('shoeLaundry', { scene: <ImageObject url={GetImageUrl('shoeLaundry')} />, pos: [0,0,30], scaledCenter: true, link: \"https://www.instagram.com/p/CJWq10igOXw/\"})\r\n    g.addNode('shoeLaundry2', { scene: <ImageObject url={GetImageUrl('shoeLaundry2')} hoverable={false} />, pos: [0,0,30],  pos2: [10, 2, -1], center: false})\r\n    g.addNode('shoeLaundry3', { scene: <ImageObject url={GetImageUrl('shoeLaundry3')} hoverable={false} />, pos: [0,0,30],  pos2: [10, -2, -1], center: false})\r\n\r\n    g.addNode('hongShing', { scene: <ImageObject url={GetImageUrl('hongShing')} />, pos: [0,0,30], scaledCenter: true, link: \"https://www.instagram.com/p/CLO_m43hFhT/\"})\r\n    g.addNode('hongShing2', { scene: <ImageObject url={GetImageUrl('hongShing2')} hoverable={false} />, pos: [0,0,30],  pos2: [10, 4, -1], center: false})\r\n    g.addNode('hongShing3', { scene: <ImageObject url={GetImageUrl('hongShing3')} hoverable={false} />, pos: [0,0,30],  pos2: [10, 0, -1], center: false})\r\n    g.addNode('hongShing4', { scene: <ImageObject url={GetImageUrl('hongShing4')} hoverable={false} />, pos: [0,0,30],  pos2: [10, -4, -1], center: false})\r\n\r\n    g.addNode('blueJordan', { scene: <ImageObject url={GetImageUrl('jordanBlue2')} />, pos: [0,0,30], scaledCenter: true, link: \"https://vimeo.com/464076439\"})\r\n    g.addNode('blueJordan2', { scene: <ImageObject url={GetImageUrl('jordanBlue1')} hoverable={false} />, pos: [0,0,30],  pos2: [10, 2, -1], center: false})\r\n    g.addNode('blueJordan3', { scene: <ImageObject url={GetImageUrl('jordanBlue3')} hoverable={false} />, pos: [0,0,30],  pos2: [10, -2, -1], center: false})\r\n    g.addNode('blueJordanText', { scene: <TextObject children={GetText('jordanBlue')} scaleable={false} flatText={true}/>, pos: [0,0,30], pos2: [-10, 0, 0], center: false})\r\n    \r\n    g.addNode('andras', { scene: <ImageObject url={GetImageUrl('andras')} />, pos: [0,0,30], scaledCenter: true})\r\n\r\n    g.addNode('ghost', { scene: <ImageObject url={GetImageUrl('ghost')} />, pos: [0,0,30], scaledCenter: true, link: \"https://www.ghostatelier.com/\" })\r\n\r\n    g.addNode('trish', { scene: <ImageObject url={GetImageUrl('trish')} />, pos: [0,0,30], scaledCenter: true })\r\n    g.addNode('trish2', { scene: <ImageObject url={GetImageUrl('trish2')} size={[6, 3.3]} hoverable={false} />, pos: [0,0,30], pos2: [10, 3, -1], center: false })\r\n    g.addNode('trish3', { scene: <ImageObject url={GetImageUrl('trish3')} size={[5,4.5]} hoverable={false} />, pos: [0,0,30], pos2: [10, -2, -1], center: false })\r\n\r\n    g.addLink('jacky', 'c4d')\r\n    g.addLink('jacky', 'dev')\r\n\r\n    g.addLink('c4d', 'trickshotting')\r\n    g.addLink('c4d', 'blueJordan')\r\n    g.addLink('c4d', 'shoeLaundry')\r\n    g.addLink('c4d', 'hongShing')\r\n    g.addLink('c4d', 'andras')\r\n\r\n    g.addLink('dev', 'ghost')\r\n    g.addLink('dev', 'trish')\r\n\r\n    g.addLink('rightArrow', '2011 - 2012')\r\n    g.addLink('rightArrow', '2013 - 2018')\r\n    g.addLink('rightArrow', '2019')\r\n    g.addLink('rightArrow', '2020')\r\n    g.addLink('rightArrow', '2021')\r\n    g.addLink('rightArrow', '2022')\r\n    g.addLink('rightArrow', '2023')\r\n    g.addLink('rightArrow', '2024')\r\n    g.addLink('rightArrow', '2025')\r\n    g.addLink('rightArrow', '2026')\r\n    g.addLink('rightArrow', '2027')\r\n    g.addLink('rightArrow', '2028')\r\n    g.addLink('rightArrow', '2029')\r\n\r\n    g.addLink('leftArrow', '2013 - 2018')\r\n    g.addLink('leftArrow', '2019')\r\n    g.addLink('leftArrow', '2020')\r\n    g.addLink('leftArrow', '2021')\r\n    g.addLink('leftArrow', '2022')\r\n    g.addLink('leftArrow', '2023')\r\n    g.addLink('leftArrow', '2024')\r\n    g.addLink('leftArrow', '2025')\r\n    g.addLink('leftArrow', '2026')\r\n    g.addLink('leftArrow', '2027')\r\n    g.addLink('leftArrow', '2028')\r\n    g.addLink('leftArrow', '2029')\r\n    g.addLink('leftArrow', '2030')\r\n\r\n    g.addLink('2011 - 2012', 'trickshotting')\r\n    \r\n    g.addLink('2019', 'ghost')\r\n\r\n    g.addLink('2020', 'blueJordan')\r\n    g.addLink('2020', 'shoeLaundry')   \r\n\r\n    g.addLink('2021', 'hongShing')\r\n    g.addLink('2021', 'andras')\r\n    g.addLink('2021', 'trish')\r\n\r\n    g.addLink('blueJordan', 'blueJordan2')\r\n    g.addLink('blueJordan', 'blueJordan3')\r\n    g.addLink('blueJordan', 'blueJordanText')\r\n    \r\n    g.addLink('shoeLaundry', 'shoeLaundry2')\r\n    g.addLink('shoeLaundry', 'shoeLaundry3')\r\n\r\n    g.addLink('hongShing', 'hongShing2')\r\n    g.addLink('hongShing', 'hongShing3')\r\n    g.addLink('hongShing', 'hongShing4')\r\n\r\n    g.addLink('trish', 'trish2')\r\n    g.addLink('trish', 'trish3')\r\n\r\n    const onClick = (clickedNode) => {\r\n        let node = g.getNode(clickedNode)\r\n\r\n        //if the clicked node is not the current center node\r\n        if(clickedNode != activeNode){\r\n            if(clickedNode == 'leftArrow' || clickedNode == 'rightArrow'){\r\n                clickedNode = getYearNode(activeNode, clickedNode)\r\n                node = g.getNode(clickedNode)\r\n            }\r\n            //if the node can be centerable\r\n            if(node.data.center !== false){\r\n                g.forEachNode((node) => {\r\n                    //set each node to the original position and center the clicked node\r\n                    node.id == clickedNode ? positions.current.get(node.id).current = [0,0,0] : positions.current.get(node.id).current = node.data.pos;\r\n                    (node.id == clickedNode && node.data.scaledCenter) ? scaleVals.current.get(node.id).current = [2,2,2] : scaleVals.current.get(node.id).current = [1,1,1];\r\n                })\r\n                //calculates and moves the nodes to the position around the clicked node (maybe in useframe for the linked nodes to rotate around the clicked node)\r\n                let linkedNodes = []\r\n                let customPosNodes = []\r\n                g.forEachLinkedNode(clickedNode, (linkedNode) => {\r\n                    if(!linkedNode.data.pos2){\r\n                        linkedNodes.push(linkedNode)\r\n                    }\r\n                    else{\r\n                        customPosNodes.push(linkedNode)\r\n                    }\r\n                    //console.log(\"Connected node: \", linkedNode.id, linkedNode.data)\r\n                })\r\n                linkedNodesPos(linkedNodes, customPosNodes)\r\n                setActiveNode(clickedNode)\r\n            }\r\n        }\r\n        else{\r\n            let urlLink = node.data.link\r\n\r\n            if(urlLink){\r\n                window.open(urlLink, \"_blank\")\r\n            }\r\n        }\r\n    }\r\n\r\n    const getYearNode = (currentYear, direction) => {\r\n        //console.log(currentYear, direction)\r\n        if(direction == 'rightArrow'){\r\n            switch(currentYear){\r\n                case '2011 - 2012':\r\n                    return '2013 - 2018'\r\n                case '2013 - 2018':\r\n                    return '2019'\r\n                case '2019':\r\n                    return '2020'\r\n                case '2020':\r\n                    return '2021'\r\n                case '2021':\r\n                    return '2022'\r\n                case '2022':\r\n                    return '2023'\r\n                case '2023':\r\n                    return '2024'\r\n                case '2024':\r\n                    return '2025'\r\n                case '2025':\r\n                    return '2026'\r\n                case '2026':\r\n                    return '2027'\r\n                case '2027':\r\n                    return '2028'\r\n                case '2028':\r\n                    return '2029'\r\n                case '2029':\r\n                    return '2030'\r\n            }\r\n        }\r\n        else{\r\n            switch(currentYear){\r\n                case '2013 - 2018':\r\n                    return '2011 - 2012'\r\n                case '2019':\r\n                    return '2013 - 2018'\r\n                case '2020':\r\n                    return '2019'\r\n                case '2021':\r\n                    return '2020'\r\n                case '2022':\r\n                    return '2021'\r\n                case '2023':\r\n                    return '2022'\r\n                case '2024':\r\n                    return '2023'\r\n                case '2025':\r\n                    return '2024'\r\n                case '2026':\r\n                    return '2025'\r\n                case '2027':\r\n                    return '2026'\r\n                case '2028':\r\n                    return '2027'\r\n                case '2029':\r\n                    return '2028'\r\n                case '2030':\r\n                    return '2029'\r\n            }\r\n        }\r\n    }\r\n\r\n    const linkedNodesPos = (linkedNodes, customPosNodes) => {\r\n        let length = linkedNodes.length\r\n        let angleIncrement = 360/length\r\n        let angle = 0\r\n\r\n        linkedNodes.forEach((node, index) => {\r\n            positions.current.get(node.id).current = [calcX(angle), calcY(angle), calcZ(angle)]\r\n            angle += angleIncrement\r\n        })\r\n\r\n        customPosNodes.forEach((node, index) => {\r\n            positions.current.get(node.id).current = node.data.pos2\r\n        })\r\n    }\r\n\r\n    const calcX = (angle) => {\r\n        angle = toRadians(angle)\r\n        return (10 * Math.sin(angle))\r\n    }\r\n\r\n    const calcY = (angle) => {\r\n        angle = toRadians(angle)\r\n        return (6 * Math.cos(angle))\r\n    }\r\n\r\n    const calcZ = (angle) => {\r\n        angle = toRadians(angle)\r\n        // return (2 * Math.random() - 2)\r\n        return -1\r\n    }\r\n\r\n    const toRadians = (angle) => {\r\n        return angle * (Math.PI / 180);\r\n    }\r\n    \r\n    //adds the posRef to a list with the key of the node it is the posRef for\r\n    const getPosRef = (node, posRef) => {\r\n        positions.current.set(node, posRef)\r\n    }\r\n\r\n    const getScaleRef = (node, scaleVal) => {\r\n        scaleVals.current.set(node, scaleVal)\r\n    }\r\n\r\n    const returnObjects = () => {\r\n        let value = []\r\n        \r\n        //adds all the nodes to the array that gets rendered\r\n        g.forEachNode((node) => {\r\n            if(node.id == 'jacky'){\r\n                value.push( <NodeObject key={node.id} value={node.id} data={node.data} onClick={onClick} getPosRef={getPosRef} getScaleRef={getScaleRef} pos={[0,0,0]} scene={node.data.scene} mouse={mouse} testing={node.data.testing}/> )\r\n            }\r\n            else{\r\n                value.push( <NodeObject key={node.id} value={node.id} data={node.data} onClick={onClick} getPosRef={getPosRef} getScaleRef={getScaleRef} pos={node.data.pos} scene={node.data.scene} mouse={mouse} testing={node.data.testing}/> )\r\n            }\r\n        })\r\n\r\n        return value\r\n    }\r\n\r\n    return (\r\n        <Suspense fallback={null}>\r\n            {/* <NodeObject mouse={mouse} scene={<JackyObject />} position1={[0,5,1]} position2={[0,0,0]} />\r\n            <NodeObject mouse={mouse} scene={<JackyObject />} position1={[0,0,0]} position2={[0,0,15]} /> */}\r\n            {returnObjects()}\r\n            {/* <NodeObject key={'a'} value={'a'} onClick={onClick} getPosRef={getPosRef} pos={[0,0,0]} scene={<TextObject position={[0,0,0]} children=\"SOFTWARE DEVELOPER\" />} mouse={mouse} testing={false}/> */}\r\n            {/* <NodeObject key={'a'} value={'a'} onClick={onClick} getPosRef={getPosRef} pos={[0,0,0]} scene={<JackyObject />} mouse={mouse} testing={false}/> */}\r\n        </Suspense>\r\n    )\r\n}\r\n\r\nexport default Main\r\n","import React, { useRef, useCallback, useState, useEffect, Suspense } from 'react'\r\nimport * as THREE from 'three'\r\nimport { Canvas, useFrame, useThree } from 'react-three-fiber'\r\nimport { ResizeObserver } from '@juggle/resize-observer'\r\n\r\nimport './css/styles.css'\r\n\r\nimport Boxes from './components/Boxes';\r\nimport Jacky from './components/Jacky';\r\nimport NodeObject from './components/NodeObject'\r\nimport Main from './components/Main'\r\nimport Graph from './components/Graph'\r\n\r\nimport { getMousePos } from \"./javascript/utils\"\r\n\r\nimport lerp from 'lerp';\r\n\r\nconst Camera = (props) => {\r\n  const ref = useRef();\r\n  const { setDefaultCamera } = useThree();\r\n\r\n  useEffect(() => {\r\n    setDefaultCamera(ref.current)\r\n  }, []);\r\n\r\n  useFrame(() => {\r\n    if(ref.current){\r\n      ref.current.lookAt(new THREE.Vector3(0,0,0))\r\n    }\r\n    //ref.current.updateMatrixWorld()\r\n  });\r\n  \r\n  return <perspectiveCamera ref={ref} {...props} />\r\n}\r\n\r\nconst App = () => {\r\n  const [posX, updateX] = useState(0)\r\n  const [posY, updateY] = useState(0)\r\n  const mousePos = useRef({ x: 0, y: 0 })\r\n  const mouse = useRef([0, 0])\r\n\r\n  const onMouseMove = useCallback((e) => {\r\n    mouse.current = [e.clientX - window.innerWidth / 2, e.clientY - window.innerHeight / 2];\r\n    mousePos.current = getMousePos(e);\r\n    updateX(lerp(posX, (posX + ((mouse.current[0] - posX) * 0.05)), 0.1));\r\n    updateY(lerp(posY, (posY + ((- mouse.current[1] - posY) * 0.05)), 0.1));\r\n    //console.log(mouse.current[0]);\r\n  }, [])\r\n\r\n  return (\r\n    <div id=\"root\">\r\n      {/* <div id=\"info\">Description</div> */}\r\n      <Canvas\r\n      resize={{ polyfill: ResizeObserver }}\r\n      onMouseMove={onMouseMove}\r\n      gl={{ antialias: true, alpha: false }}\r\n      //camera={camera}\r\n      onCreated={({ gl }) => gl.setClearColor('#0a0a0a')}>\r\n        <Camera position={[posX,posY,20]}/>\r\n        <rectAreaLight width={20} height={20} color={\"#ffffff\"} intensity={5} position={[0, 5, 20]} lookAt={[0, 0, 0]} />\r\n        {/* <Jacky mouse={mouse}/> */}\r\n        <Suspense fallback={null}>\r\n          <Main mouse={mouse} />\r\n        </Suspense>\r\n        {/* <Graph /> */}\r\n      </Canvas>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","export function getMousePos(e) {\r\n    return { x: e.clientX, y: e.clientY }\r\n}\r\n\r\nexport function getMouseDegrees(x, y, degreeLimit) {\r\n    let dx = 0,\r\n        dy = 0,\r\n        xdiff,\r\n        xPercentage,\r\n        ydiff,\r\n        yPercentage\r\n\r\n    let w = { x: window.innerWidth, y: window.innerHeight }\r\n\r\n    // Left (Rotates neck left between 0 and -degreeLimit)\r\n    // 1. If cursor is in the left half of screen\r\n    if (x <= w.x / 2) {\r\n        // 2. Get the difference between middle of screen and cursor position\r\n        xdiff = w.x / 2 - x\r\n        // 3. Find the percentage of that difference (percentage toward edge of screen)\r\n        xPercentage = (xdiff / (w.x / 2)) * 100\r\n        // 4. Convert that to a percentage of the maximum rotation we allow for the neck\r\n        dx = ((degreeLimit * xPercentage) / 100) * -1\r\n    }\r\n\r\n    // Right (Rotates neck right between 0 and degreeLimit)\r\n    if (x >= w.x / 2) {\r\n        xdiff = x - w.x / 2\r\n        xPercentage = (xdiff / (w.x / 2)) * 100\r\n        dx = (degreeLimit * xPercentage) / 100\r\n    }\r\n    // Up (Rotates neck up between 0 and -degreeLimit)\r\n    if (y <= w.y / 2) {\r\n        ydiff = w.y / 2 - y\r\n        yPercentage = (ydiff / (w.y / 2)) * 100\r\n        // Note that I cut degreeLimit in half when she looks up\r\n        dy = ((degreeLimit * 0.5 * yPercentage) / 100) * -1\r\n    }\r\n    // Down (Rotates neck down between 0 and degreeLimit)\r\n    if (y >= w.y / 2) {\r\n        ydiff = y - w.y / 2\r\n        yPercentage = (ydiff / (w.y / 2)) * 100\r\n        dy = (degreeLimit * yPercentage) / 100\r\n    }\r\n    return { x: dx, y: dy }\r\n}\r\n  ","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}